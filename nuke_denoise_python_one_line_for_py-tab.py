exec('import os, re\n\n# project file name\nprojname = nuke.root()[\'name\'].value()\n\n# get the current write node\nthis_write = nuke.thisNode()\n# get precomp task\ntask_name = this_write[\'task\'].value()\n\n# get write type selection\nrenderType = this_write[\'render_type\'].value()\n\n# make sure create directories is always checked\nthis_write[\'create_directories\'].setValue(1)\n\ndef precompPlateName():\n    this_write[\'views\'].setValue(\'main\')\n    #project file directory\n    projdir = os.path.dirname(projname)\n\n    # get name of top node with tcl\n    topnode_name = nuke.tcl("full_name [topnode %s]" % this_write.name())\n    # get actual top node with python\n    topnode = nuke.toNode(topnode_name)\n    # get file value of top node\n    topnode_file = topnode[\'file\'].value()\n    topnode_base = os.path.basename(topnode_file)\n\n    # Regular expression to match the version pattern\n    version_pattern = r"v\\d+"\n\n    # Search for the version pattern in the file path\n    version_match = re.search(version_pattern, projname)\n\n    # Extract the version string if found\n    proj_version = version_match.group(0) if version_match else "No version found"\n\n    # Replace "project_files" with "renders"\n    renders_folder = projdir.replace("project_files", "renders")\n    renders_folder = renders_folder.replace("/Volumes/Macintosh HD", "")\n\n    write_name = topnode_base.rsplit(\'.\', 1)[0] + \'_\' + task_name + \'_\' + proj_version\n\n    full_write_path = f\'{renders_folder}/precomps/{write_name}/{write_name}.####.exr\'\n\n    # Set the path to the knob\n    this_write[\'do_not_modify\'].setValue(full_write_path)\n\n\ndef precompCompName():\n    this_write[\'views\'].setValue(\'main\')\n    render_path = projname.replace("project_files", "renders")\n    render_path = render_path.replace(".nk", ".####.exr")\n    render_path = render_path.replace("comp_v", "comp_" + task_name + "_v")\n    render_subfolder = os.path.splitext(os.path.splitext(os.path.basename(render_path))[0])[0]\n    render_path = render_path.replace("/comp/", "/comp/precomps/" + render_subfolder + "/")\n    this_write[\'do_not_modify\'].setValue(render_path)\n\n\n\ndef renderMain():\n    render_path = projname.replace("project_files", "renders")\n    render_path = render_path.replace(".nk", ".mov")\n    this_write[\'do_not_modify\'].setValue(render_path)\n\n\ndef renderReview():\n    render_path = projname.replace("project_files", "renders")\n    render_path = render_path.replace(".nk", "_review.mov")\n    this_write[\'do_not_modify\'].setValue(render_path)\n\n\ndef renderSwitch():\n    if renderType == "main (final)":\n        renderMain()\n    elif renderType == "main (review)":\n        renderReview()\n    elif renderType == "precomp (plate name)":\n        precompPlateName()\n    elif renderType == "precomp (comp name)":\n        precompCompName()\n    else:\n        pass\n\nrenderSwitch()')